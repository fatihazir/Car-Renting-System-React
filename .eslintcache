[{"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\index.js":"1","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\App.js":"2","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\Home.js":"3","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\CompanyList.js":"4","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\CompanyPanel.js":"5","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\ManageCompany.js":"6","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\ManageVehicles.js":"7","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\StaffPanel.js":"8","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\ManageStaff.js":"9","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\Navigation.js":"10","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\PopUpAddVehicle.js":"11","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\EditVehicle.js":"12","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\EditStaff.js":"13","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\PopUpAddStaff.js":"14","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\PopUpMoreInformationForCompany.js":"15","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\PopUpMoreInformationForVehicle.js":"16","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\RentCar.js":"17","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\VehiclesByCompany.js":"18","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\Demo.js":"19","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagerLogin.js":"20","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\StaffLogin.js":"21","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\DirectToPanelAfterLogin.js":"22"},{"size":435,"mtime":1611178264199,"results":"23","hashOfConfig":"24"},{"size":2008,"mtime":1611527351837,"results":"25","hashOfConfig":"24"},{"size":2992,"mtime":1611496769851,"results":"26","hashOfConfig":"24"},{"size":3454,"mtime":1611527482191,"results":"27","hashOfConfig":"24"},{"size":4749,"mtime":1611526705069,"results":"28","hashOfConfig":"24"},{"size":8328,"mtime":1611522942830,"results":"29","hashOfConfig":"24"},{"size":4586,"mtime":1611523526086,"results":"30","hashOfConfig":"24"},{"size":440,"mtime":1611145803538,"results":"31","hashOfConfig":"24"},{"size":3908,"mtime":1611524484293,"results":"32","hashOfConfig":"24"},{"size":2791,"mtime":1611527658166,"results":"33","hashOfConfig":"24"},{"size":7172,"mtime":1611415815783,"results":"34","hashOfConfig":"24"},{"size":8145,"mtime":1611350106424,"results":"35","hashOfConfig":"24"},{"size":731,"mtime":1611496791691,"results":"36","hashOfConfig":"24"},{"size":7232,"mtime":1611496670450,"results":"37","hashOfConfig":"24"},{"size":1270,"mtime":1611496661345,"results":"38","hashOfConfig":"24"},{"size":2226,"mtime":1611496651699,"results":"39","hashOfConfig":"24"},{"size":12376,"mtime":1611526950878,"results":"40","hashOfConfig":"24"},{"size":3889,"mtime":1611496548922,"results":"41","hashOfConfig":"24"},{"size":4144,"mtime":1611503604666,"results":"42","hashOfConfig":"24"},{"size":5447,"mtime":1611526349380,"results":"43","hashOfConfig":"24"},{"size":5554,"mtime":1611525649254,"results":"44","hashOfConfig":"24"},{"size":1171,"mtime":1611525308965,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"5mnupk",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\index.js",[],["95","96"],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\App.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\Home.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\CompanyList.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\CompanyPanel.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\ManageCompany.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\ManageVehicles.js",["97"],"import React, { Component } from \"react\";\r\nimport { PopUpAddVehicle } from \"./PopUpAddVehicle\";\r\nimport { EditVehicle } from \"./EditVehicle\";\r\n\r\nimport {\r\n  Card,\r\n  ListGroupItem,\r\n  ListGroup,\r\n  CardColumns,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ButtonToolbar\r\n} from \"react-bootstrap\";\r\n\r\nlet dataOfManager = sessionStorage.getItem('Manager')\r\nlet Manager = JSON.parse(dataOfManager)\r\n\r\nlet dataOfStaff = sessionStorage.getItem('Staff')\r\nlet Staff = JSON.parse(dataOfStaff)\r\n\r\n\r\nexport class ManageVehicles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      Vehicles: [],\r\n      AddVehiclePopUpShow: false,\r\n      EditVehiclePopUpShow: false,\r\n      VehicleIdDueToEdit : 1,\r\n      compId : null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(Manager || Staff){\r\n      this.RefleshList();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(Manager || Staff){\r\n      this.RefleshList();\r\n    }\r\n  }\r\n\r\n  FindCompId(){\r\n    if(Manager){\r\n      return Manager.CompanyId\r\n    }else{\r\n      return Staff.CompanyId\r\n    }\r\n  }\r\n\r\n  async RefleshList() {\r\n    let compId = \"6\";\r\n    let url = \"http://localhost:55991/api/Company/CompanyVehicleGet/\" + this.FindCompId()\r\n    let response = await fetch(url);\r\n    let data = await response.json();\r\n\r\n    this.setState({\r\n      Vehicles: data,\r\n    });\r\n  }\r\n\r\n  ShowPopUpAddVehicle = () => {\r\n    this.setState({\r\n      AddVehiclePopUpShow: true,\r\n    });\r\n  };\r\n\r\n  HidePopUpAddVehicle = () => {\r\n    this.setState({\r\n      AddVehiclePopUpShow: false,\r\n    });\r\n  };\r\n\r\n  ShowPopUpEditVehicle = (vehicleId) => {\r\n    this.setState({\r\n      EditVehiclePopUpShow: true,\r\n      VehicleIdDueToEdit : vehicleId\r\n    });\r\n  };\r\n\r\n  HidePopUpEditVehicle = () => {\r\n    this.setState({\r\n      EditVehiclePopUpShow: false,\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { Vehicles } = this.state;\r\n\r\n    if(Manager || Staff){\r\n      return (\r\n          <div>\r\n            {this.state.AddVehiclePopUpShow ? (\r\n                <PopUpAddVehicle onClose={this.HidePopUpAddVehicle} />\r\n            ) : null}\r\n\r\n            <Container className=\"p-3\">\r\n              <Row className=\"justify-content-md-center\">\r\n                <Col xs={4} sm={4} md={2}>\r\n                  <ButtonToolbar>\r\n                    <Button size=\"lg\" onClick={this.ShowPopUpAddVehicle}>\r\n                      Add Vehicle\r\n                    </Button>\r\n                  </ButtonToolbar>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n\r\n            <CardColumns className=\"justify-content-center\">\r\n              {Vehicles.sort((a, b) =>\r\n                  a.DatetimeOfCreated > b.DatetimeOfCreated ? 1 : -1\r\n              ).map((vehicle) => (\r\n                  <Card\r\n                      border=\"secondary\"\r\n                      key={vehicle.Id}\r\n                      style={{\r\n                        width: \"24rem\",\r\n                        justifyContent: \"center\",\r\n                        marginLeft: \"3rem\",\r\n                      }}\r\n                  >\r\n                    <Card.Img variant=\"top\" src={vehicle.PhotoURL} />\r\n                    <Card.Body>\r\n                      <Card.Title>Model : {vehicle.ModelName}</Card.Title>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                      <ListGroupItem>Brand : {vehicle.Brand}</ListGroupItem>\r\n                      <ListGroupItem>\r\n                        Daily Price : {vehicle.DailyPrice} £\r\n                      </ListGroupItem>\r\n                      <ListGroupItem>\r\n                        Minimum Age Limit : {vehicle.MinimumAgeLimit}\r\n                      </ListGroupItem>\r\n                    </ListGroup>\r\n                    <Card.Body>\r\n                      <Button\r\n                          onClick={() => this.ShowPopUpEditVehicle(vehicle.Id)}\r\n                          variant=\"flat\"\r\n                          size=\"xxs\"\r\n                      >\r\n                        Edit Vehicle Details\r\n                      </Button>\r\n                    </Card.Body>\r\n\r\n                  </Card>\r\n              ))}\r\n            </CardColumns>\r\n\r\n            {this.state.EditVehiclePopUpShow ? (\r\n                <EditVehicle  onClose={this.HidePopUpEditVehicle} vehicle = {this.state.Vehicles.filter(item => item.Id === this.state.VehicleIdDueToEdit)} />\r\n            ) : null}\r\n\r\n          </div>\r\n      );\r\n    }\r\n    else{\r\n      return(\r\n          <div>\r\n            <h3 style={{textAlign:'center'}}>Yetkiniz yok</h3>\r\n          </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\StaffPanel.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\ManageStaff.js",["98"],"import React, { Component } from \"react\";\r\nimport { PopUpAddStaff } from \"./PopUpAddStaff\";\r\nimport { EditStaff } from \"./EditStaff\";\r\n\r\nimport {\r\n  Card,\r\n  ListGroupItem,\r\n  ListGroup,\r\n  CardColumns,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ButtonToolbar\r\n} from \"react-bootstrap\";\r\n\r\n\r\nlet dataOfManager = sessionStorage.getItem('Manager')\r\nlet Manager = JSON.parse(dataOfManager)\r\n\r\n\r\nexport class ManageStaff extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      Staff: [],\r\n      AddStaffPopUpShow: false,\r\n      EditStaffPopUpShow: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.RefleshList();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.RefleshList();\r\n  }\r\n\r\n  async RefleshList() {\r\n    if(Manager){\r\n      let compId = \"5\";\r\n      let url = \"http://localhost:55991/api/Company/CompanyStaffGet/\" + Manager.CompanyId;\r\n      let response = await fetch(url);\r\n      let data = await response.json();\r\n\r\n      this.setState({\r\n        Staff: data,\r\n      });\r\n    }\r\n  }\r\n\r\n  ShowPopUpAddStaff = () => {\r\n    this.setState({\r\n      AddStaffPopUpShow: true,\r\n    });\r\n  };\r\n\r\n  HidePopUpAddStaff = () => {\r\n    this.setState({\r\n      AddStaffPopUpShow: false,\r\n    });\r\n  };\r\n\r\n  ShowPopUpEditStaff = () => {\r\n    this.setState({\r\n      EditStaffPopUpShow: true,\r\n    });\r\n  };\r\n\r\n  HidePopUpEditStaff = () => {\r\n    this.setState({\r\n      EditStaffPopUpShow: false,\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { Staff } = this.state;\r\n\r\n   if(Manager){\r\n     return (\r\n         <div>\r\n           {this.state.AddStaffPopUpShow ? (\r\n               <PopUpAddStaff onClose={this.HidePopUpAddStaff} />\r\n           ) : null}\r\n\r\n           <Container className=\"p-3\">\r\n             <Row className=\"justify-content-md-center\">\r\n               <Col xs={4} sm={4} md={2}>\r\n                 <ButtonToolbar>\r\n                   <Button size=\"lg\" onClick={this.ShowPopUpAddStaff}>\r\n                     Add Staff\r\n                   </Button>\r\n                 </ButtonToolbar>\r\n               </Col>\r\n             </Row>\r\n           </Container>\r\n\r\n           <CardColumns className=\"justify-content-center\">\r\n             {Staff.sort((a, b) =>\r\n                 a.DatetimeOfCreated > b.DatetimeOfCreated ? 1 : -1\r\n             ).map((staff) => (\r\n                 <Card\r\n                     border=\"secondary\"\r\n                     key={staff.Id}\r\n                     style={{\r\n                       width: \"24rem\",\r\n                       justifyContent: \"center\",\r\n                       marginLeft: \"3rem\",\r\n                     }}\r\n                 >\r\n                   <Card.Img variant=\"top\" src={staff.PhotoURL} />\r\n                   <Card.Body>\r\n                     <Card.Title>Model :</Card.Title>\r\n                   </Card.Body>\r\n                   <ListGroup className=\"list-group-flush\">\r\n                     <ListGroupItem>Brand : </ListGroupItem>\r\n                     <ListGroupItem>\r\n                       Daily Price :  £\r\n                     </ListGroupItem>\r\n                     <ListGroupItem>\r\n                       Minimum Age Limit :\r\n                     </ListGroupItem>\r\n                   </ListGroup>\r\n                   <Card.Body>\r\n                     <Button\r\n                         onClick={this.ShowPopUpEditStaff}\r\n                         variant=\"flat\"\r\n                         size=\"xxs\"\r\n                     >\r\n                       Edit Vehicle Details\r\n                     </Button>\r\n                   </Card.Body>\r\n\r\n                 </Card>\r\n             ))}\r\n           </CardColumns>\r\n\r\n           {this.state.EditStaffPopUpShow ? (\r\n               <EditStaff  onClose={this.HidePopUpEditStaff}/>\r\n           ) : null}\r\n         </div>\r\n     );\r\n   }\r\n   else{\r\n     return(\r\n         <div>\r\n           <h3 style={{textAlign:'center'}}>Yetkiniz yok</h3>\r\n         </div>\r\n     )\r\n   }\r\n  }\r\n}\r\n\r\n","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\Navigation.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\PopUpAddVehicle.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\EditVehicle.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\EditStaff.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\PopUpAddStaff.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\PopUpMoreInformationForCompany.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\PopUpMoreInformationForVehicle.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\RentCar.js",["99"],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\VehiclesByCompany.js",[],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\Demo.js",["100","101"],"import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactEncrypt from 'react-encrypt'\r\nimport {Button, Form, Container, Col} from 'react-bootstrap';\r\n\r\nexport class Renderer extends Component {\r\n\r\n    static contextTypes = {\r\n        encrypt: PropTypes.func.isRequired,\r\n        decrypt: PropTypes.func.isRequired,\r\n    }\r\n\r\n    state = {\r\n        pureText: \"\",\r\n    };\r\n\r\n\r\n    HandleSubmit = (e) => {\r\n        e.preventDefault(); //linkteki sorguyu engeller\r\n\r\n        let form = e.target;\r\n\r\n        let url = \"http://localhost:55991/api/Company/CompanyVehicleAdd\";\r\n\r\n\r\n        fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                Username: form.Username.value,\r\n                Password: form.encryptedText.value,\r\n\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) =>\r\n            {\r\n                alert('result: ' + result)\r\n                this.props.onClose()\r\n            }).catch((error) =>\r\n            {\r\n                alert(\"failed \" + error.message)\r\n            }\r\n\r\n        )\r\n    };\r\n\r\n\r\n    onChange = event => {\r\n        const {name, value} = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {pureText} = this.state;\r\n\r\n        const {encrypt,decrypt} = this.context;\r\n\r\n        let encryptedText = encrypt(pureText);\r\n        let decryptedText = decrypt(encryptedText);\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"justify-content-center\">\r\n                <Container>\r\n\r\n                    <h1>Manager Panel</h1>\r\n\r\n                    <Form onSubmit={this.HandleSubmit}>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control\r\n                                size=\"sm\"\r\n                                type=\"text\"\r\n                                name=\"Username\"\r\n                                required\r\n                                placeholder=\"Username\"\r\n\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                size=\"sm\"\r\n                                type=\"text\"\r\n                                placeholder=\"Password\"  onChange={this.onChange} name=\"pureText\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                            <Form.Label></Form.Label>\r\n                            <Form.Control\r\n                                size=\"sm\"\r\n                                type=\"text\"\r\n                                placeholder=\"\"\r\n                                name=\"encryptedText\"\r\n                                required\r\n                                defaultValue={encryptedText}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Button\r\n                                style={{ padding: \"1rem\" }}\r\n                                variant=\"success\"\r\n                                type=\"submit\"\r\n\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport class Demo extends Component {\r\n\r\n    render() {\r\n        const encryptKey = \"ewfWE@#%$rfdsefgdsf\";\r\n        return <div>\r\n\r\n            <ReactEncrypt\r\n                encryptKey={encryptKey}\r\n            >\r\n                <Renderer/>\r\n            </ReactEncrypt>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagerLogin.js",["102","103"],"C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\StaffLogin.js",["104","105"],"import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactEncrypt from 'react-encrypt'\r\nimport {Button, Form, Container, Col} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport {DirectToPanelAfterLogin} from './ManagementComps/DirectToPanelAfterLogin'\r\n\r\n\r\nexport class Renderer extends Component {\r\n\r\n    static contextTypes = {\r\n        encrypt: PropTypes.func.isRequired,\r\n        decrypt: PropTypes.func.isRequired,\r\n    }\r\n\r\n    state = {\r\n        pureText: \"\",\r\n        RedirectPopUp: false,\r\n    };\r\n\r\n    HandleSubmit =async (e) => {\r\n        var self = this\r\n        e.preventDefault(); //linkteki sorguyu engeller\r\n\r\n        let form = e.target;\r\n\r\n        let url = \"http://localhost:55991/api/staff/GetEncKey\";\r\n\r\n\r\n        await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                Username: form.Username.value,\r\n\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) =>\r\n            {\r\n                const {decrypt} = this.context;\r\n                console.log(form.pureText.value)\r\n                console.log(decrypt(result.Password))\r\n                if(form.pureText.value === decrypt(result.Password)){\r\n                    let url = \"http://localhost:55991/api/staff/Get/\" + result.Id;\r\n                    axios\r\n                        .get(url)\r\n                        .then(function (response) {\r\n                            // handle success\r\n                            sessionStorage.setItem('Staff', JSON.stringify(response.data))\r\n                            self.setState({\r\n                                RedirectPopUp: true\r\n                            });\r\n\r\n\r\n                        })\r\n                        .catch(function (error) {\r\n                            // handle error\r\n                            console.log(error);\r\n                        })\r\n                        .then(function () {\r\n                            // always executed\r\n                        });\r\n                }\r\n                else{\r\n                    alert(\"Username or password is not valid!\")\r\n                }\r\n            }).catch((error) =>\r\n                {\r\n                    alert(\"failed \" + error.message)\r\n                }\r\n\r\n            )\r\n    };\r\n\r\n\r\n\r\n\r\n    onChange = event => {\r\n        const {name, value} = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {pureText} = this.state;\r\n\r\n        const {encrypt,decrypt} = this.context;\r\n\r\n        let encryptedText = encrypt(pureText);\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"justify-content-center\">\r\n                <Container>\r\n\r\n                    <h1>Staff Panel</h1>\r\n\r\n\r\n                    <Form onSubmit={this.HandleSubmit}>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control\r\n                                size=\"sm\"\r\n                                type=\"text\"\r\n                                name=\"Username\"\r\n                                required\r\n                                placeholder=\"Username\"\r\n\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                size=\"sm\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"  onChange={this.onChange} name=\"pureText\"\r\n                                required\r\n\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                            <Form.Label></Form.Label>\r\n                            <Form.Control\r\n                                size=\"sm\"\r\n                                type=\"text\"\r\n                                placeholder=\"Your encrypted password will be shown here\"\r\n                                name=\"encryptedText\"\r\n                                required\r\n                                readOnly\r\n                                defaultValue={encryptedText}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Button\r\n                                style={{ padding: \"1rem\" }}\r\n                                variant=\"success\"\r\n                                type=\"submit\"\r\n\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n                </Container>\r\n                {this.state.RedirectPopUp ? (\r\n                    <DirectToPanelAfterLogin />\r\n                ) : null}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport class StaffLogin extends Component {\r\n\r\n    render() {\r\n        const encryptKey = \"ewfWE@#%$rfdsefgdsf\";\r\n        return <div>\r\n\r\n            <ReactEncrypt\r\n                encryptKey={encryptKey}\r\n            >\r\n                <Renderer/>\r\n            </ReactEncrypt>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\HFati\\OneDrive\\Masaüstü\\CarRentingFront\\car-renting\\src\\Components\\ManagementComps\\DirectToPanelAfterLogin.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":58,"column":9,"nodeType":"112","messageId":"113","endLine":58,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":43,"column":11,"nodeType":"112","messageId":"113","endLine":43,"endColumn":17},{"ruleId":"110","severity":1,"message":"114","line":10,"column":5,"nodeType":"112","messageId":"113","endLine":10,"endColumn":10},{"ruleId":"110","severity":1,"message":"115","line":4,"column":34,"nodeType":"112","messageId":"113","endLine":4,"endColumn":37},{"ruleId":"110","severity":1,"message":"116","line":66,"column":13,"nodeType":"112","messageId":"113","endLine":66,"endColumn":26},{"ruleId":"110","severity":1,"message":"115","line":4,"column":34,"nodeType":"112","messageId":"113","endLine":4,"endColumn":37},{"ruleId":"110","severity":1,"message":"117","line":96,"column":24,"nodeType":"112","messageId":"113","endLine":96,"endColumn":31},{"ruleId":"110","severity":1,"message":"115","line":4,"column":34,"nodeType":"112","messageId":"113","endLine":4,"endColumn":37},{"ruleId":"110","severity":1,"message":"117","line":95,"column":24,"nodeType":"112","messageId":"113","endLine":95,"endColumn":31},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'compId' is assigned a value but never used.","Identifier","unusedVar","'Staff' is assigned a value but never used.","'Col' is defined but never used.","'decryptedText' is assigned a value but never used.","'decrypt' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]